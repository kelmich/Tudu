{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/michael/coding/tudu/app/App.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport \"@babel/polyfill\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport SplashScreen from \"./screens/SplashScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport Amplify from \"aws-amplify\";\nimport awsmobile from \"./aws-exports\";\nAmplify.configure(_objectSpread(_objectSpread({}, awsmobile), {}, {\n  Analytics: {\n    disabled: true\n  }\n}));\nimport React, { useEffect } from 'react';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport AuthContext from \"./contexts/AuthContext\";\nvar theme = {\n  dark: true,\n  colors: {\n    primary: '#e0e1dd',\n    background: '#1b263b',\n    card: '#0d1b2a',\n    text: '#a7a7a7',\n    border: 'transparent',\n    notification: '#000000'\n  }\n};\nvar Stack = createStackNavigator();\nexport default function App(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useReducer = React.useReducer(function (prevState, action) {\n    switch (action.type) {\n      case 'RESTORE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: false,\n          userToken: action.token\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: true,\n          userToken: null\n        });\n    }\n  }, {\n    isLoading: true,\n    isSignout: false,\n    userToken: null\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      login: function login(username, password) {\n        var loginRequest;\n        return _regeneratorRuntime.async(function login$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(post(\"auth/login\", {\n                  \"username\": username,\n                  \"password\": password\n                }));\n\n              case 3:\n                loginRequest = _context.sent;\n\n                if (!loginRequest.token) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 7;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('authToken', loginRequest.token));\n\n              case 7:\n                dispatch({\n                  type: 'LOGIN',\n                  authToken: loginRequest.token\n                });\n                _context.next = 11;\n                break;\n\n              case 10:\n                throw loginRequest.error;\n\n              case 11:\n                _context.next = 20;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                _context.t0 = _context.t0.toString();\n                _context.t0 = _context.t0.replace('\"username\"', \"Username\");\n                _context.t0 = _context.t0.replace('\"password\"', \"Password\");\n                throw _context.t0.toString();\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 13]], Promise);\n      },\n      logout: function logout() {\n        return _regeneratorRuntime.async(function logout$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('authToken', \"\"));\n\n              case 3:\n                _context2.next = 7;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n\n              case 7:\n                dispatch({\n                  type: 'LOGOUT'\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      register: function register(name, username, password) {\n        var loginRequest;\n        return _regeneratorRuntime.async(function register$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regeneratorRuntime.awrap(post(\"auth/register\", {\n                  \"name\": name,\n                  \"username\": username,\n                  \"password\": password\n                }));\n\n              case 3:\n                loginRequest = _context3.sent;\n\n                if (!loginRequest.token) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                _context3.next = 7;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('authToken', loginRequest.token));\n\n              case 7:\n                _context3.next = 10;\n                break;\n\n              case 9:\n                throw loginRequest.error;\n\n              case 10:\n                _context3.next = 19;\n                break;\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](0);\n                _context3.t0 = _context3.t0.toString();\n                _context3.t0 = _context3.t0.replace('\"name\"', \"First Name\");\n                _context3.t0 = _context3.t0.replace('\"username\"', \"Username\");\n                _context3.t0 = _context3.t0.replace('\"password\"', \"Password\");\n                throw _context3.t0.toString();\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, [[0, 12]], Promise);\n      },\n      get: get,\n      post: post,\n      verifyUserToken: verifyUserToken\n    };\n  });\n  useEffect(function () {\n    var restoreToken = function restoreToken() {\n      var userToken;\n      return _regeneratorRuntime.async(function restoreToken$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('auth-token'));\n\n            case 3:\n              userToken = _context4.sent;\n              _context4.next = 9;\n              break;\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](0);\n              alert(_context4.t0);\n\n            case 9:\n              dispatch({\n                type: 'RESTORE_TOKEN',\n                token: userToken\n              });\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    restoreToken();\n  }, []);\n\n  if (state.isLoading) {\n    return React.createElement(SplashScreen, null);\n  } else {\n    return React.createElement(AuthContext.Provider, {\n      value: authContext\n    }, React.createElement(NavigationContainer, {\n      theme: theme\n    }, React.createElement(StatusBar, {\n      backgroundColor: theme.colors.background\n    }), React.createElement(Stack.Navigator, null, state.isLoading ? React.createElement(Stack.Screen, {\n      name: \"Splash\",\n      component: SplashScreen\n    }) : state.userToken == null ? React.createElement(Stack.Screen, {\n      name: \"SignIn\",\n      component: LoginScreen,\n      options: {\n        animationTypeForReplace: state.isSignout ? 'pop' : 'push',\n        headerShown: false\n      }\n    }) : React.createElement(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }))));\n  }\n}","map":{"version":3,"sources":["/home/michael/coding/tudu/app/App.tsx"],"names":["HomeScreen","SplashScreen","LoginScreen","Amplify","awsmobile","configure","Analytics","disabled","React","useEffect","NavigationContainer","createStackNavigator","AsyncStorage","AuthContext","theme","dark","colors","primary","background","card","text","border","notification","Stack","App","navigation","useReducer","prevState","action","type","userToken","token","isLoading","isSignout","state","dispatch","authContext","useMemo","login","username","password","post","loginRequest","setItem","authToken","error","console","log","toString","replace","logout","register","name","get","verifyUserToken","restoreToken","getItem","alert","animationTypeForReplace","headerShown"],"mappings":"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","sourcesContent":["import \"@babel/polyfill\"; // hacky fix that makes the web verison work\n// import React from 'react';\n// import { StyleSheet, Text, View } from 'react-native';\nimport HomeScreen from \"./screens/HomeScreen\";\n// import DetailsScreen from \"./screens/DetailsScreen\";\nimport SplashScreen from \"./screens/SplashScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\n\nimport Amplify from \"aws-amplify\";\nimport awsmobile from \"./aws-exports\";\nAmplify.configure({ ...awsmobile, Analytics: { disabled: true } }); // Note: Disabling analytics was a hacky way of getting warning to disappear\n\nimport React, {useEffect, createContext} from 'react';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { AsyncStorage, Button, Text, TextInput, View, StatusBar } from \"react-native\";\n\n\nimport AuthContext from \"./contexts/AuthContext\";\n\n// Theming\nconst theme = {\n  dark: true,\n  colors: {\n    primary: '#e0e1dd',\n    background: '#1b263b',\n    card: '#0d1b2a',\n    text: '#a7a7a7',\n    // hintText: '#a8a8a8',\n    // inputText: '#ffffff',\n    border: 'transparent',\n    notification: '#000000'\n  },\n};\n\n// Setup Layout\nconst Stack = createStackNavigator();\n\nexport default function App({ navigation }) {\n  const [state, dispatch] = React.useReducer(\n    (prevState, action) => {\n      switch (action.type) {\n        case 'RESTORE_TOKEN':\n          return {\n            ...prevState,\n            userToken: action.token,\n            isLoading: false,\n          };\n        case 'LOGIN':\n          return {\n            ...prevState,\n            isSignout: false,\n            userToken: action.token,\n          };\n        case 'LOGOUT':\n          return {\n            ...prevState,\n            isSignout: true,\n            userToken: null,\n          };\n      }\n    },\n    {\n      isLoading: true,\n      isSignout: false,\n      userToken: null,\n    },\n  );\n\n  const authContext = React.useMemo(\n    () => ({\n      login: async (username, password) => {\n        // attempt web request\n        try {\n          var loginRequest = await post(\"auth/login\", {\n            \"username\": username,\n            \"password\": password\n          });\n          // if request successful\n          if (loginRequest.token) {\n            // store token in storage\n            await AsyncStorage.setItem('authToken', loginRequest.token);\n            // go to content screens\n            dispatch({ type: 'LOGIN', authToken: loginRequest.token });\n          } else {\n            throw loginRequest.error;\n          }\n\n        } catch (error) {\n          console.log(error)\n          // format error\n          error = error.toString();\n          error = error.replace('\"username\"', \"Username\");\n          error = error.replace('\"password\"', \"Password\");\n\n          // pass error down\n          throw error.toString();\n        }\n      }\n      ,\n      logout: async () => {\n        try {\n          await AsyncStorage.setItem('authToken', \"\");\n        } catch (error) {\n          // ignore error\n        }\n        dispatch({ type: 'LOGOUT' });\n      },\n      register: async (name, username, password) => {\n        // attempt web request\n        try {\n          var loginRequest = await post(\"auth/register\", {\n            \"name\": name,\n            \"username\": username,\n            \"password\": password\n          });\n          // if request successful\n          if (loginRequest.token) {\n            // store token in storage\n            await AsyncStorage.setItem('authToken', loginRequest.token);\n          } else {\n            throw loginRequest.error;\n          }\n\n        } catch (error) {\n          // format error\n          error = error.toString();\n          error = error.replace('\"name\"', \"First Name\");\n          error = error.replace('\"username\"', \"Username\");\n          error = error.replace('\"password\"', \"Password\");\n\n          // pass error down\n          throw error.toString();\n        }\n      },\n      get: get,\n      post: post,\n      verifyUserToken: verifyUserToken\n    })\n  );\n\n  // on app start\n  useEffect(() => {\n    const restoreToken = async () => {\n      let userToken;\n      try {\n        userToken = await AsyncStorage.getItem('auth-token');\n      } catch (e) {\n        // Restoring token failed\n        alert(e);\n      }\n      dispatch({type: 'RESTORE_TOKEN', token: userToken});\n    };\n\n    restoreToken();\n  }, []);\n\n  if (state.isLoading) {\n    return <SplashScreen />;\n  } else {\n    return (\n      <AuthContext.Provider value={authContext}>\n        <NavigationContainer theme={theme}>\n          <StatusBar backgroundColor={theme.colors.background} />\n          <Stack.Navigator>\n            {state.isLoading ? (\n              <Stack.Screen name=\"Splash\" component={SplashScreen} />\n            ) : state.userToken == null ? (\n              <Stack.Screen\n                name=\"SignIn\"\n                component={LoginScreen}\n                options={{\n                  animationTypeForReplace: state.isSignout ? 'pop' : 'push',\n                  headerShown: false,\n                }}\n              />\n            ) : (\n              // User is signed in\n              <Stack.Screen name=\"Home\" component={HomeScreen} />\n              // <Stack.Screen name=\"Home\" component={SettingsScreen} initialParams={AuthContext} />\n            )}\n          </Stack.Navigator>\n        </NavigationContainer>\n      </AuthContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}