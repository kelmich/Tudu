{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/michael/coding/tudu/app/App.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport \"@babel/polyfill\";\nimport React, { useEffect } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport SplashScreen from \"./screens/SplashScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport Amplify from \"aws-amplify\";\nimport { Auth } from \"aws-amplify\";\nimport awsmobile from \"./aws-exports\";\nAmplify.configure(_objectSpread(_objectSpread({}, awsmobile), {}, {\n  Analytics: {\n    disabled: true\n  }\n}));\nimport AuthContext from \"./contexts/AuthContext\";\nvar theme = {\n  dark: false,\n  colors: {\n    primary: \"#1c53a6\",\n    secondary: \"#2f80fa\",\n    background: \"#ffffff\",\n    card: \"#e0e1dd\",\n    text: \"#a7a7a7\",\n    hintText: \"#a8a8a8\",\n    inputText: \"#5c636e\",\n    border: \"transparent\",\n    notification: \"#000000\"\n  }\n};\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _React$useReducer = React.useReducer(function (prevState, action) {\n    switch (action.type) {\n      case \"RESTORE_TOKEN\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case \"LOGIN\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: false,\n          userToken: action.token\n        });\n\n      case \"LOGOUT\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: true,\n          userToken: null\n        });\n    }\n  }, {\n    isLoading: true,\n    isSignout: false,\n    userToken: null\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  useEffect(function () {\n    var restoreToken = function restoreToken() {\n      var userToken;\n      return _regeneratorRuntime.async(function restoreToken$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                userToken = null;\n              } catch (e) {\n                alert(e);\n              }\n\n              dispatch({\n                type: \"RESTORE_TOKEN\",\n                token: userToken\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    restoreToken();\n  }, []);\n  var authContext = React.useMemo(function () {\n    return {\n      login: function login(username, password) {\n        var user;\n        return _regeneratorRuntime.async(function login$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(Auth.signIn(username, password));\n\n              case 3:\n                user = _context2.sent;\n                dispatch({\n                  type: \"LOGIN\",\n                  token: \"dummy-auth-token\"\n                });\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(\"error signing in\", _context2.t0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 7]], Promise);\n      },\n      logout: function logout() {\n        return _regeneratorRuntime.async(function logout$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return _regeneratorRuntime.awrap(Auth.signOut());\n\n              case 3:\n                dispatch({\n                  type: \"LOGOUT\"\n                });\n                _context3.next = 9;\n                break;\n\n              case 6:\n                _context3.prev = 6;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(\"error signing out: \", _context3.t0);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, [[0, 6]], Promise);\n      },\n      signUp: function signUp(data) {\n        return _regeneratorRuntime.async(function signUp$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                dispatch({\n                  type: \"LOGIN\",\n                  token: \"dummy-auth-token\"\n                });\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    };\n  }, []);\n\n  if (state.isLoading) {\n    return React.createElement(SplashScreen, null);\n  } else {\n    return React.createElement(AuthContext.Provider, {\n      value: authContext\n    }, React.createElement(NavigationContainer, {\n      theme: theme\n    }, React.createElement(StatusBar, {\n      backgroundColor: theme.colors.background\n    }), React.createElement(Stack.Navigator, null, state.isLoading ? React.createElement(Stack.Screen, {\n      name: \"Splash\",\n      component: SplashScreen\n    }) : state.userToken == null ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: {\n        animationTypeForReplace: state.isSignout ? \"pop\" : \"push\",\n        headerShown: false\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen,\n      options: {\n        animationTypeForReplace: state.isSignout ? \"pop\" : \"push\",\n        headerShown: false\n      }\n    })) : React.createElement(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        animationTypeForReplace: state.isSignout ? \"pop\" : \"push\",\n        headerShown: false\n      }\n    }))));\n  }\n}","map":{"version":3,"sources":["/home/michael/coding/tudu/app/App.tsx"],"names":["React","useEffect","NavigationContainer","createStackNavigator","HomeScreen","SplashScreen","LoginScreen","RegisterScreen","Amplify","Auth","awsmobile","configure","Analytics","disabled","AuthContext","theme","dark","colors","primary","secondary","background","card","text","hintText","inputText","border","notification","Stack","App","useReducer","prevState","action","type","userToken","token","isLoading","isSignout","state","dispatch","restoreToken","e","alert","authContext","useMemo","login","username","password","signIn","user","console","log","logout","signOut","signUp","data","animationTypeForReplace","headerShown"],"mappings":";;;;;;;;;AAAA,OAAO,iBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAGA,OAAOC,UAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AAGA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,SAAP;AACAF,OAAO,CAACG,SAAR,iCAAuBD,SAAvB;AAAkCE,EAAAA,SAAS,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ;AAA7C;AAGA,OAAOC,WAAP;AAGA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,KADM;AAEZC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,SADH;AAENC,IAAAA,SAAS,EAAE,SAFL;AAGNC,IAAAA,UAAU,EAAE,SAHN;AAINC,IAAAA,IAAI,EAAE,SAJA;AAKNC,IAAAA,IAAI,EAAE,SALA;AAMNC,IAAAA,QAAQ,EAAE,SANJ;AAONC,IAAAA,SAAS,EAAE,SAPL;AAQNC,IAAAA,MAAM,EAAE,aARF;AASNC,IAAAA,YAAY,EAAE;AATR;AAFI,CAAd;AAgBA,IAAMC,KAAK,GAAGxB,oBAAoB,EAAlC;AAEA,eAAe,SAASyB,GAAT,GAAe;AAAA,0BACF5B,KAAK,CAAC6B,UAAN,CACxB,UAACC,SAAD,EAAYC,MAAZ,EAAuB;AACrB,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,eAAL;AACE,+CACKF,SADL;AAEEG,UAAAA,SAAS,EAAEF,MAAM,CAACG,KAFpB;AAGEC,UAAAA,SAAS,EAAE;AAHb;;AAKF,WAAK,OAAL;AACE,+CACKL,SADL;AAEEM,UAAAA,SAAS,EAAE,KAFb;AAGEH,UAAAA,SAAS,EAAEF,MAAM,CAACG;AAHpB;;AAKF,WAAK,QAAL;AACE,+CACKJ,SADL;AAEEM,UAAAA,SAAS,EAAE,IAFb;AAGEH,UAAAA,SAAS,EAAE;AAHb;AAdJ;AAoBD,GAtBuB,EAuBxB;AACEE,IAAAA,SAAS,EAAE,IADb;AAEEC,IAAAA,SAAS,EAAE,KAFb;AAGEH,IAAAA,SAAS,EAAE;AAHb,GAvBwB,CADE;AAAA;AAAA,MACrBI,KADqB;AAAA,MACdC,QADc;;AAgC5BrC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMsC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnB,kBAAI;AACFN,gBAAAA,SAAS,GAAG,IAAZ;AACD,eAFD,CAEE,OAAOO,CAAP,EAAU;AAEVC,gBAAAA,KAAK,CAACD,CAAD,CAAL;AACD;;AACDF,cAAAA,QAAQ,CAAC;AAAEN,gBAAAA,IAAI,EAAE,eAAR;AAAyBE,gBAAAA,KAAK,EAAED;AAAhC,eAAD,CAAR;;AARmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB;;AAWAM,IAAAA,YAAY;AACb,GAbQ,EAaN,EAbM,CAAT;AAeA,MAAMG,WAAW,GAAG1C,KAAK,CAAC2C,OAAN,CAClB;AAAA,WAAO;AACLC,MAAAA,KAAK,EAAE,eAAOC,QAAP,EAAyBC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAEgBrC,IAAI,CAACsC,MAAL,CAAYF,QAAZ,EAAsBC,QAAtB,CAFhB;;AAAA;AAEGE,gBAAAA,IAFH;AAGHV,gBAAAA,QAAQ,CAAC;AAAEN,kBAAAA,IAAI,EAAE,OAAR;AAAiBE,kBAAAA,KAAK,EAAE;AAAxB,iBAAD,CAAR;AAHG;AAAA;;AAAA;AAAA;AAAA;AAKHe,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AASLC,MAAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAEE1C,IAAI,CAAC2C,OAAL,EAFF;;AAAA;AAGJd,gBAAAA,QAAQ,CAAC;AAAEN,kBAAAA,IAAI,EAAE;AAAR,iBAAD,CAAR;AAHI;AAAA;;AAAA;AAAA;AAAA;AAKJiB,gBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AALI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OATH;AAiBLG,MAAAA,MAAM,EAAE,gBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACNhB,gBAAAA,QAAQ,CAAC;AAAEN,kBAAAA,IAAI,EAAE,OAAR;AAAiBE,kBAAAA,KAAK,EAAE;AAAxB,iBAAD,CAAR;;AADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBH,KAAP;AAAA,GADkB,EAsBlB,EAtBkB,CAApB;;AAyBA,MAAIG,KAAK,CAACF,SAAV,EAAqB;AACnB,WAAO,oBAAC,YAAD,OAAP;AACD,GAFD,MAEO;AACL,WACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEO;AAA7B,OACE,oBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAE3B;AAA5B,OACE,oBAAC,SAAD;AAAW,MAAA,eAAe,EAAEA,KAAK,CAACE,MAAN,CAAaG;AAAzC,MADF,EAEE,oBAAC,KAAD,CAAO,SAAP,QACGiB,KAAK,CAACF,SAAN,GACC,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,SAAS,EAAE9B;AAAvC,MADD,GAEGgC,KAAK,CAACJ,SAAN,IAAmB,IAAnB,GACF,0CACE,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,SAAS,EAAE3B,WAFb;AAGE,MAAA,OAAO,EAAE;AACPiD,QAAAA,uBAAuB,EAAElB,KAAK,CAACD,SAAN,GAAkB,KAAlB,GAA0B,MAD5C;AAEPoB,QAAAA,WAAW,EAAE;AAFN;AAHX,MADF,EASE,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,SAAS,EAAEjD,cAFb;AAGE,MAAA,OAAO,EAAE;AACPgD,QAAAA,uBAAuB,EAAElB,KAAK,CAACD,SAAN,GAAkB,KAAlB,GAA0B,MAD5C;AAEPoB,QAAAA,WAAW,EAAE;AAFN;AAHX,MATF,CADE,GAoBF,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,SAAS,EAAEpD,UAArC;AAAiD,MAAA,OAAO,EAAE;AACxDmD,QAAAA,uBAAuB,EAAElB,KAAK,CAACD,SAAN,GAAkB,KAAlB,GAA0B,MADK;AAExDoB,QAAAA,WAAW,EAAE;AAF2C;AAA1D,MAvBJ,CAFF,CADF,CADF;AAoCD;AACF","sourcesContent":["import \"@babel/polyfill\"; // hacky fix that makes the web verison work\nimport React, { useEffect } from \"react\";\nimport { StatusBar } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\n// screens\nimport HomeScreen from \"./screens/HomeScreen\";\nimport SplashScreen from \"./screens/SplashScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\n\n// aws\nimport Amplify from \"aws-amplify\";\nimport { Auth } from \"aws-amplify\";\nimport awsmobile from \"./aws-exports\";\nAmplify.configure({ ...awsmobile, Analytics: { disabled: true } }); // Note: Disabling analytics was a hacky way of getting warning to disappear\n\n// contexts\nimport AuthContext from \"./contexts/AuthContext\";\n\n// Theming\nconst theme = {\n  dark: false,\n  colors: {\n    primary: \"#1c53a6\",\n    secondary: \"#2f80fa\",\n    background: \"#ffffff\",\n    card: \"#e0e1dd\",\n    text: \"#a7a7a7\",\n    hintText: \"#a8a8a8\",\n    inputText: \"#5c636e\",\n    border: \"transparent\",\n    notification: \"#000000\",\n  },\n};\n\n// Setup Layout\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [state, dispatch] = React.useReducer(\n    (prevState, action) => {\n      switch (action.type) {\n        case \"RESTORE_TOKEN\":\n          return {\n            ...prevState,\n            userToken: action.token,\n            isLoading: false,\n          };\n        case \"LOGIN\":\n          return {\n            ...prevState,\n            isSignout: false,\n            userToken: action.token,\n          };\n        case \"LOGOUT\":\n          return {\n            ...prevState,\n            isSignout: true,\n            userToken: null,\n          };\n      }\n    },\n    {\n      isLoading: true,\n      isSignout: false,\n      userToken: null,\n    }\n  );\n\n  // on app start\n  useEffect(() => {\n    const restoreToken = async () => {\n      let userToken;\n      try {\n        userToken = null; //await AsyncStorage.getItem('auth-token');\n      } catch (e) {\n        // Restoring token failed\n        alert(e);\n      }\n      dispatch({ type: \"RESTORE_TOKEN\", token: userToken });\n    };\n\n    restoreToken();\n  }, []);\n\n  const authContext = React.useMemo(\n    () => ({\n      login: async (username: string, password: string) => {\n        try {\n          const user = await Auth.signIn(username, password);\n          dispatch({ type: \"LOGIN\", token: \"dummy-auth-token\" });\n        } catch (error) {\n          console.log(\"error signing in\", error);\n        }\n      },\n      logout: async () => {\n        try {\n          await Auth.signOut();\n          dispatch({ type: \"LOGOUT\" });\n        } catch (error) {\n          console.log(\"error signing out: \", error);\n        }\n      },\n      signUp: async (data) => {\n        dispatch({ type: \"LOGIN\", token: \"dummy-auth-token\" });\n      },\n    }),\n    []\n  );\n\n  if (state.isLoading) {\n    return <SplashScreen />;\n  } else {\n    return (\n      <AuthContext.Provider value={authContext}>\n        <NavigationContainer theme={theme}>\n          <StatusBar backgroundColor={theme.colors.background} />\n          <Stack.Navigator>\n            {state.isLoading ? (\n              <Stack.Screen name=\"Splash\" component={SplashScreen} />\n            ) : state.userToken == null ? (\n              <>\n                <Stack.Screen\n                  name=\"Login\"\n                  component={LoginScreen}\n                  options={{\n                    animationTypeForReplace: state.isSignout ? \"pop\" : \"push\",\n                    headerShown: false,\n                  }}\n                />\n                <Stack.Screen\n                  name=\"Register\"\n                  component={RegisterScreen}\n                  options={{\n                    animationTypeForReplace: state.isSignout ? \"pop\" : \"push\",\n                    headerShown: false,\n                  }}\n                />\n              </>\n            ) : (\n              <Stack.Screen name=\"Home\" component={HomeScreen} options={{\n                animationTypeForReplace: state.isSignout ? \"pop\" : \"push\",\n                headerShown: false,\n              }}/>\n            )}\n          </Stack.Navigator>\n        </NavigationContainer>\n      </AuthContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}